---
- hosts: digitalocean

  vars:
    do_token: "{{ lookup('file','doapikey') }}"


  tasks:

  - name: ensure ssh key exists
    user: >
      name={{ ansible_user_id }}
      generate_ssh_key=yes
      ssh_key_file=.ssh/id_rsa

  - name: ensure key exists at DigitalOcean
    digital_ocean: >
      state=present
      command=ssh
      name=my_ssh_key
      ssh_pub_key={{ lookup('file','~/.ssh/id_rsa.pub') }}
      api_token={{ do_token }}
    register: my_ssh_key

  - name: ensure droplet one exists
    digital_ocean: >
      state=present
      command=droplet
      name=droplet-one
      unique_name=yes
      size_id=512mb
      region_id=lon1
      image_id=ubuntu-16-04-x64
      ssh_key_ids={{ my_ssh_key.ssh_key.id }}
      api_token={{ do_token }}
    register: droplet_one

  - debug: msg="IP is {{ droplet_one.droplet.ip_address }}"

  - add_host:
      hostname: "{{ droplet_one.droplet.ip_address }}"
      groups: new_remote_py3
      ansible_python_interpreter: "/usr/bin/python3"


- hosts: new_remote_py3
  remote_user: root

  tasks:
  - debug: msg="{{play_hosts[0]}}"
    

  - group:
      name: admins
      state: present
  - user:
      name: danny
      append: yes
      groups: 
        - sudo
        - admins
      state: present
  - authorized_key:
      user: danny
      key: "{{ lookup('file','~/.ssh/id_rsa.pub') }}"

  - name: Allow 'admins' group to have passwordless sudo
    lineinfile:
      dest: /etc/sudoers
      state: present
      regexp: '^%admins'
      line: '%admins ALL=(ALL) NOPASSWD: ALL'
      validate: visudo -cf %s

- hosts: new_remote_py3
  remote_user: danny
  sudo: yes

  tasks:
  - name: Install required apt-packages
    apt:
      package: '{{ item }}' 
      state: present 
      update_cache: yes
    
    with_items:
     - python3-dev
     - python3-pip
     - virtualenv
     - redis-server
     - git
     - nginx

  - name: Install uwsgi and virtualenv
    pip:
        name: "{{ item }}"
        state: present
    with_items:
     - uwsgi


- hosts: new_remote_py3
  remote_user: danny
  sudo: no

  tasks:

  - name: Installing FlaskBB
    git:
      repo: https://github.com/sh4nks/flaskbb.git
      dest: /home/danny/flaskbb

  - name: Installing FlaskBB dependencies
    pip:
       chdir: /home/danny/flaskbb
       requirements: /home/danny/flaskbb/requirements.txt 
       virtualenv: /home/danny/flaskbb-env    

- hosts: new_remote_py3
  remote_user: danny
  sudo: yes
  tasks:
  - name: Check destination config dirs exist
    file: 
      path: "{{ item }}"
      state: directory

    with_items:
      - /etc/nginx/sites-enabled
      - /etc/uwsgi/apps-enabled

  - name: Write nginx configuration
    template: 
      src: templates/nginx
      dest: /etc/nginx/sites-enabled/flaskbb

  - name: Suppress default nginx configuration
    file:
      path: /etc/nginx/sites-enabled/default
      state: absent

  - name: Write uwsgi configuration
    copy: 
      src: templates/uwsgi
      dest: /home/danny/flaskbb/uwsgi.ini

  - name: Write uwsgi systemctl
    copy:
      src: templates/uwsgi-runner
      dest: /etc/systemd/system/flaskbb.service

  - name: Start flaskbb service
    systemd:
      name: flaskbb.service
      enabled: yes
      state: started    
